# Load the airquality dataset
data(airquality)

# Print the structure of the dataset
str(airquality)

# List the variables in the dataset
variables <- names(airquality)
print(variables)

# Print the top 15 rows of the dataset
head(airquality, 15)

# Define a user-defined function using a variable from the dataset
customFunction <- function(temp) {
  if (temp > 80) {
    return("Hot")
  } else if (temp > 60) {
    return("Moderate")
  } else {
    return("Cool")
  }
}

# Example usage of the user-defined function
temperature <- airquality$Temp[1]  # Using the "Temp" variable from the dataset
result <- customFunction(temperature)
print(result)

library(datasets)
data(airquality)
View(airquality)
# Load the datasets package
library(datasets)
# Load the airquality dataset
data(airquality)
# Filter rows with ozone level above 30
filtered_data <- airquality[airquality$Ozone > 30, ]
# View the filtered dataset
head(filtered_data)
View(airquality)
View(filtered_data)

# Load the datasets package
library(datasets)
# Load the airquality dataset
data(airquality)
# Select the dependent and independent variables
dependent_var <- airquality$Ozone
independent_vars <- airquality[, c("Solar.R", "Wind", "Temp", "Month")]
# Create a new data frame by joining the variables
new_df <- cbind(dependent_var, independent_vars)
# View the new data frame
head(new_df)
View(independent_vars)
View(new_df)
View(new_df)
View(independent_vars)
View(new_df)
# Load the datasets package
library(datasets)
# Load the airquality dataset
data(airquality)
# Print the dataset or any desired information
print(airquality)

# display airquality dataset
print(airquality)
summary(airquality)
# Calculate the mean
mean_value <- mean(Ozone)
# Print summary of the airquality dataset
summary(airquality)
# Extract the "Ozone" variable from the airquality dataset
ozone <- airquality$Ozone
# Calculate the mean
mean_value <- mean(ozone, na.rm = TRUE)
# Calculate the median
median_value <- median(ozone, na.rm = TRUE)
# Calculate the mode
mode_value <- as.numeric(names(which.max(table(ozone))))
# Calculate the range
range_value <- range(ozone, na.rm = TRUE)
# Print the mean, median, mode, and range for Ozone
cat("Mean:", mean_value, "\n")
cat("Median:", median_value, "\n")
cat("Mode:", mode_value, "\n")
cat("Range:", range_value[2] - range_value[1], "\n")

